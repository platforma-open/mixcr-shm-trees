ll := import("@platforma-sdk/workflow-tengo:ll")

soiResultImportColumns := func(dbParameters) {
	commonDomain := {
		"pl7.app/list": dbParameters.id
	}
	if dbParameters.searchParameters.type == "tree_search_top" {
		return [ {
			column: "topHit",
			id: "topHit",
			spec: {
				name: "pl7.app/search/topHit",
				valueType: "String",
				annotations: {
					"pl7.app/label": "Top Hit " + dbParameters.name
				}
			},
			domain: commonDomain
		}, {
			column: "mutations",
			id: "mutations",
			spec: {
				name: "pl7.app/search/numberOfMutations",
				valueType: "Int",
				annotations: {
					"pl7.app/label": "Number of mutations " + dbParameters.name
				}
			},
			domain: commonDomain
		} ]
	} else if dbParameters.searchParameters.type == "preset_alignment_search_top" {
		return [ {
			column: "topHit",
			id: "topHit",
			spec: {
				name: "pl7.app/search/topHit",
				valueType: "String",
				annotations: {
					"pl7.app/label": "Top Hit " + dbParameters.name
				}
			},
			domain: commonDomain
		}, {
			column: "penalty",
			id: "penalty",
			spec: {
				name: "pl7.app/search/alignmentPenalty",
				valueType: "Int",
				annotations: {
					"pl7.app/label": "Alignment penalty " + dbParameters.name
				}
			},
			domain: commonDomain
		}, {
			column: "score",
			id: "score",
			spec: {
				name: "pl7.app/search/alignmentScore",
				valueType: "Int",
				annotations: {
					"pl7.app/label": "Alignment score " + dbParameters.name
				}
			},
			domain: commonDomain
		} ]
	} else {
		ll.panic("Unknown search mode: " + dbParameters.searchParameters.type)
	}
}

export ll.toStrict({
	soiResultImportColumns: soiResultImportColumns
})
