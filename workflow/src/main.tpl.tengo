wf := import("@milaboratory/tengo-sdk:workflow")

render := import("@milaboratory/tengo-sdk:render")
assets := import("@milaboratory/tengo-sdk:assets")
ll := import("@milaboratory/tengo-sdk:ll")

processTpl := assets.importTemplate(":process")

wf.body(func(args) {
	if is_undefined(args.donorColumn) {
		ll.panic("No donor column")
	}

	if (len(args.datasetColumns) == 0) {
		ll.panic("No datasets to process")
	}

	datasets := {}
	for datasetRef in args.datasetColumns {
		ll.print("DEBUG_MESSAGE", datasetRef)
		datasets[datasetRef.blockId] = wf.resolve(datasetRef)
	}

	donorColumn := wf.resolve(args.donorColumn)

	results := render.createEphemeral(processTpl, {
		datasets: datasets,
		donorColumn: donorColumn
	})

	return {
		outputs: {
			"allelesLog": results.output("allelesLog"),
			"treesLog": results.output("treesLog"),
			"trees": results.output("trees"),
			"treeNodes": results.output("treeNodes")
		},
		exports: {}
	}
})
